{
    "garbage_collector": "Parallel",
    "jdk": "GraalVM_21.0.4",
    "benchmark_group": "Renaissance",
    "benchmark_name": "akka-uct",
    "heap_size": "256",
    "error": "Error code not found: 255\nUncaught error from thread [UCT-akka.actor.default-dispatcher-19]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\nUncaught error from thread [UCT-akka.actor.default-dispatcher-13]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n\tat scala.reflect.ClassTag$cache$.computeTag(ClassTag.scala:129)\n\tat scala.reflect.ClassTag$.apply(ClassTag.scala:161)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor$.createNodeActor(UctAkkaActorBenchmark.scala:217)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.generateUrgentChildren(UctAkkaActorBenchmark.scala:323)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.process(UctAkkaActorBenchmark.scala:249)\n\tat edu.rice.habanero.actors.AkkaActor$$anon$1.applyOrElse(AkkaActor.scala:33)\n\tat akka.actor.Actor.aroundReceive(Actor.scala:537)\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:471)\n\tat edu.rice.habanero.actors.AkkaActor.aroundReceive(AkkaActor.scala:17)\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:579)\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:547)\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\njava.lang.OutOfMemoryError: GC overhead limit exceeded\nUncaught error from thread [UCT-akka.actor.default-dispatcher-18]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n\tat akka.dispatch.Mailboxes.getMailboxType(Mailboxes.scala:148)\n\tat akka.actor.LocalActorRefProvider.actorOf(ActorRefProvider.scala:699)\n\tat akka.actor.dungeon.Children.makeChild(Children.scala:312)\n\tat akka.actor.dungeon.Children.attachChild(Children.scala:50)\n\tat akka.actor.dungeon.Children.attachChild$(Children.scala:22)\n\tat akka.actor.ActorCell.attachChild(ActorCell.scala:410)\n\tat akka.actor.ActorSystemImpl.actorOf(ActorSystem.scala:905)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor$.createNodeActor(UctAkkaActorBenchmark.scala:217)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.generateUrgentChildren(UctAkkaActorBenchmark.scala:323)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.process(UctAkkaActorBenchmark.scala:249)\n\tat edu.rice.habanero.actors.AkkaActor$$anon$1.applyOrElse(AkkaActor.scala:33)\n\tat akka.actor.Actor.aroundReceive(Actor.scala:537)\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:471)\n\tat edu.rice.habanero.actors.AkkaActor.aroundReceive(AkkaActor.scala:17)\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:579)\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:547)\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\nUncaught error from thread [UCT-akka.actor.internal-dispatcher-4]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: GC overhead limit exceeded\nUncaught error from thread [UCT-akka.actor.default-dispatcher-14]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: GC overhead limit exceeded\nUncaught error from thread [UCT-akka.actor.default-dispatcher-20]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: GC overhead limit exceeded\nUncaught error from thread [UCT-akka.actor.default-dispatcher-15]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\nRuntime.exit(-1) logging failed: GC overhead limit exceeded\nUncaught error from thread [UCT-akka.actor.default-dispatcher-10]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: GC overhead limit exceeded\nUncaught error from thread [UCT-akka.actor.default-dispatcher-17]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: GC overhead limit exceeded\nUncaught error from thread [Uncaught error from thread [UCT-akka.actor.default-dispatcher-21]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: GC overhead limit exceeded\nUncaught error from thread [UCT-akka.actor.default-dispatcher-7]: GC overhead limit exceeded, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n",
    "avg_cpu_usage": 74.3,
    "avg_cpu_time": 94.2,
    "avg_io_time": 0.0,
    "p90_io": 0.0,
    "number_of_pauses": 0,
    "total_pause_time": 0,
    "avg_pause_time": 0,
    "pauses_per_category": {},
    "total_pause_time_per_category": {},
    "avg_pause_time_per_category": {},
    "p90_pause_time": 0,
    "throughput": 0
}