{
    "garbage_collector": "Z",
    "jdk": "HotSpot_21.0.4",
    "benchmark_group": "Renaissance",
    "benchmark_name": "neo4j-analytics",
    "heap_size": "512",
    "error": "Error code not found: 1\nException in thread \"neo4j.Scheduler-1\" java.lang.OutOfMemoryError: Java heap space\n\tat java.base/jdk.internal.misc.Unsafe.allocateInstance(Native Method)\n\tat java.base/java.lang.invoke.DirectMethodHandle.allocateInstance(DirectMethodHandle.java:501)\n\tat java.base/java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(DirectMethodHandle$Holder)\n\tat java.base/java.lang.invoke.Invokers$Holder.linkToTargetMethod(Invokers$Holder)\n\tat org.neo4j.kernel.impl.scheduler.ThreadPoolManager.getThreadPool(ThreadPoolManager.java:56)\n\tat org.neo4j.kernel.impl.scheduler.ThreadPoolManager.getThreadPool(ThreadPoolManager.java:52)\n\tat org.neo4j.kernel.impl.scheduler.ScheduledJobHandle.submitIfRunnable(ScheduledJobHandle.java:148)\n\tat org.neo4j.kernel.impl.scheduler.TimeBasedTaskScheduler.scheduleDueTasks(TimeBasedTaskScheduler.java:146)\n\tat org.neo4j.kernel.impl.scheduler.TimeBasedTaskScheduler.tick(TimeBasedTaskScheduler.java:129)\n\tat org.neo4j.kernel.impl.scheduler.TimeBasedTaskScheduler.run(TimeBasedTaskScheduler.java:119)\n\tat java.base/java.lang.Thread.runWith(Thread.java:1596)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\nBenchmark 'neo4j-analytics' failed with exception:\njava.lang.OutOfMemoryError: Java heap space\n\tat play.api.libs.json.jackson.JsValueDeserializer.parseBigDecimal(JacksonJson.scala:172)\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:200)\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:158)\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:153)\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:4801)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2974)\n\tat play.api.libs.json.jackson.JacksonJson.parseJsValue(JacksonJson.scala:296)\n\tat play.api.libs.json.StaticBinding$.parseJsValue(StaticBinding.scala:17)\n\tat play.api.libs.json.Json$.parse(Json.scala:175)\n\tat org.renaissance.neo4j.Neo4jAnalytics.loadJsonResource(Neo4jAnalytics.scala:82)\n\tat org.renaissance.neo4j.Neo4jAnalytics.setUpBeforeAll(Neo4jAnalytics.scala:102)\n\tat org.renaissance.harness.ExecutionDriver.executeBenchmark(ExecutionDriver.java:82)\n\tat org.renaissance.harness.RenaissanceSuite$.runBenchmarks$$anonfun$1(RenaissanceSuite.scala:172)\n\tat org.renaissance.harness.RenaissanceSuite$$$Lambda/0x00007c0d2811c4c0.applyVoid(Unknown Source)\n\tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)\n\tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)\n\tat scala.collection.immutable.List.foreach(List.scala:333)\n\tat org.renaissance.harness.RenaissanceSuite$.runBenchmarks(RenaissanceSuite.scala:205)\n\tat org.renaissance.harness.RenaissanceSuite$.main(RenaissanceSuite.scala:130)\n\tat org.renaissance.harness.RenaissanceSuite.main(RenaissanceSuite.scala)\n\tat java.base/java.lang.invoke.LambdaForm$DMH/0x00007c0d28004000.invokeStatic(LambdaForm$DMH)\n\tat java.base/java.lang.invoke.LambdaForm$MH/0x00007c0d2800a000.invoke(LambdaForm$MH)\n\tat java.base/java.lang.invoke.Invokers$Holder.invokeExact_MT(Invokers$Holder)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(DirectMethodHandleAccessor.java:154)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.renaissance.core.Launcher.loadAndInvokeHarnessClass(Launcher.java:129)\n\tat org.renaissance.core.Launcher.launchHarnessClass(Launcher.java:78)\n\tat org.renaissance.core.Launcher.main(Launcher.java:43)\n",
    "avg_cpu_usage": 24.5,
    "avg_cpu_time": 40.8,
    "avg_io_time": 0.5,
    "p90_io": 0.03,
    "number_of_pauses": 0,
    "total_pause_time": 0,
    "avg_pause_time": 0,
    "pauses_per_category": {},
    "total_pause_time_per_category": {},
    "avg_pause_time_per_category": {},
    "p90_pause_time": 0,
    "throughput": 0
}