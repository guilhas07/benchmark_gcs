{
    "garbage_collector": "G1",
    "jdk": "HotSpot_21.0.4",
    "benchmark_group": "Renaissance",
    "benchmark_name": "neo4j-analytics",
    "heap_size": "512",
    "error": "Error code not found: 1\nBenchmark 'neo4j-analytics' failed with exception:\njava.lang.OutOfMemoryError: Java heap space\n\tat org.eclipse.collections.impl.map.mutable.primitive.LongObjectHashMap.allocateTable(LongObjectHashMap.java:3022)\n\tat org.neo4j.collection.trackable.HeapTrackingLongObjectHashMap.allocateTable(HeapTrackingLongObjectHashMap.java:62)\n\tat org.eclipse.collections.impl.map.mutable.primitive.LongObjectHashMap.rehash(LongObjectHashMap.java:2908)\n\tat org.eclipse.collections.impl.map.mutable.primitive.LongObjectHashMap.rehashAndGrow(LongObjectHashMap.java:2900)\n\tat org.eclipse.collections.impl.map.mutable.primitive.LongObjectHashMap.addKeyValueAtIndex(LongObjectHashMap.java:2742)\n\tat org.eclipse.collections.impl.map.mutable.primitive.LongObjectHashMap.getIfAbsentPut(LongObjectHashMap.java:2357)\n\tat org.neo4j.kernel.impl.api.state.TxState.getOrCreateNodeState(TxState.java:673)\n\tat org.neo4j.kernel.impl.api.state.TxState.getOrCreateNodeStateLabelDiffSets(TxState.java:337)\n\tat org.neo4j.kernel.impl.api.state.TxState.nodeDoAddLabel(TxState.java:499)\n\tat org.neo4j.kernel.impl.newapi.Operations.checkConstraintsAndAddLabelToNode(Operations.java:420)\n\tat org.neo4j.kernel.impl.newapi.Operations.nodeCreateWithLabels(Operations.java:276)\n\tat org.neo4j.kernel.impl.coreapi.TransactionImpl.createNode(TransactionImpl.java:208)\n\tat org.renaissance.neo4j.analytics.AnalyticsBenchmark.$anonfun$populateVertices$1(AnalyticsBenchmark.scala:73)\n\tat org.renaissance.neo4j.analytics.AnalyticsBenchmark.$anonfun$populateVertices$1$adapted(AnalyticsBenchmark.scala:72)\n\tat org.renaissance.neo4j.analytics.AnalyticsBenchmark$$Lambda/0x00007acf683913c8.apply(Unknown Source)\n\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)\n\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:933)\n\tat org.renaissance.neo4j.analytics.AnalyticsBenchmark.populateVertices(AnalyticsBenchmark.scala:72)\n\tat org.renaissance.neo4j.analytics.AnalyticsBenchmark.populateDatabase(AnalyticsBenchmark.scala:54)\n\tat org.renaissance.neo4j.Neo4jAnalytics.setUpBeforeAll(Neo4jAnalytics.scala:104)\n\tat org.renaissance.harness.ExecutionDriver.executeBenchmark(ExecutionDriver.java:82)\n\tat org.renaissance.harness.RenaissanceSuite$.runBenchmarks$$anonfun$1(RenaissanceSuite.scala:172)\n\tat org.renaissance.harness.RenaissanceSuite$$$Lambda/0x00007acf6811c4c0.applyVoid(Unknown Source)\n\tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)\n\tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)\n\tat scala.collection.immutable.List.foreach(List.scala:333)\n\tat org.renaissance.harness.RenaissanceSuite$.runBenchmarks(RenaissanceSuite.scala:205)\n\tat org.renaissance.harness.RenaissanceSuite$.main(RenaissanceSuite.scala:130)\n\tat org.renaissance.harness.RenaissanceSuite.main(RenaissanceSuite.scala)\n\tat java.base/java.lang.invoke.LambdaForm$DMH/0x00007acf68004000.invokeStatic(LambdaForm$DMH)\n\tat java.base/java.lang.invoke.LambdaForm$MH/0x00007acf6800a000.invoke(LambdaForm$MH)\n",
    "avg_cpu_usage": 44.1,
    "avg_cpu_time": 61.9,
    "avg_io_time": 0.8,
    "p90_io": 1.63,
    "number_of_pauses": 0,
    "total_pause_time": 0,
    "avg_pause_time": 0,
    "pauses_per_category": {},
    "total_pause_time_per_category": {},
    "avg_pause_time_per_category": {},
    "p90_pause_time": 0,
    "throughput": 0
}