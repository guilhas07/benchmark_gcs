{
    "garbage_collector": "Z",
    "jdk": "HotSpot_21.0.4",
    "benchmark_group": "Renaissance",
    "benchmark_name": "akka-uct",
    "heap_size": "256",
    "error": "Error code not found: 255\nUncaught error from thread [UCT-akka.actor.default-dispatcher-7]: Java heap space, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: Java heap space\n\tat scala.collection.immutable.RedBlackTree$Tree.withLeft(RedBlackTree.scala:681)\n\tat scala.collection.immutable.RedBlackTree$.balanceLeft(RedBlackTree.scala:362)\n\tat scala.collection.immutable.RedBlackTree$.upd(RedBlackTree.scala:417)\n\tat scala.collection.immutable.RedBlackTree$.upd(RedBlackTree.scala:419)\n\tat scala.collection.immutable.RedBlackTree$.upd(RedBlackTree.scala:419)\n\tat scala.collection.immutable.RedBlackTree$.upd(RedBlackTree.scala:419)\n\tat scala.collection.immutable.RedBlackTree$.update(RedBlackTree.scala:175)\n\tat scala.collection.immutable.TreeMap.updated(TreeMap.scala:139)\n\tat akka.actor.dungeon.ChildrenContainer$NormalChildrenContainer.reserve(ChildrenContainer.scala:135)\n\tat akka.actor.dungeon.Children.reserveChild(Children.scala:146)\n\tat akka.actor.dungeon.Children.reserveChild$(Children.scala:22)\n\tat akka.actor.ActorCell.reserveChild(ActorCell.scala:410)\n\tat akka.actor.dungeon.Children.makeChild(Children.scala:299)\n\tat akka.actor.dungeon.Children.attachChild(Children.scala:50)\n\tat akka.actor.dungeon.Children.attachChild$(Children.scala:22)\n\tat akka.actor.ActorCell.attachChild(ActorCell.scala:410)\n\tat akka.actor.ActorSystemImpl.actorOf(ActorSystem.scala:905)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor$.createNodeActor(UctAkkaActorBenchmark.scala:217)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.generateChildren(UctAkkaActorBenchmark.scala:291)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.process(UctAkkaActorBenchmark.scala:244)\n\tat edu.rice.habanero.actors.AkkaActor$$anon$1.applyOrElse(AkkaActor.scala:33)\n\tat akka.actor.Actor.aroundReceive(Actor.scala:537)\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:471)\n\tat edu.rice.habanero.actors.AkkaActor.aroundReceive(AkkaActor.scala:17)\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:579)\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:547)\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\nUncaught error from thread [UCT-akka.actor.default-dispatcher-20]: Java heap space, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: Java heap space\n\tat akka.actor.LocalActorRefProvider.actorOf(ActorRefProvider.scala:702)\n\tat akka.actor.dungeon.Children.makeChild(Children.scala:312)\n\tat akka.actor.dungeon.Children.attachChild(Children.scala:50)\n\tat akka.actor.dungeon.Children.attachChild$(Children.scala:22)\n\tat akka.actor.ActorCell.attachChild(ActorCell.scala:410)\n\tat akka.actor.ActorSystemImpl.actorOf(ActorSystem.scala:905)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor$.createNodeActor(UctAkkaActorBenchmark.scala:217)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.generateChildren(UctAkkaActorBenchmark.scala:291)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.process(UctAkkaActorBenchmark.scala:244)\n\tat edu.rice.habanero.actors.AkkaActor$$anon$1.applyOrElse(AkkaActor.scala:33)\n\tat akka.actor.Actor.aroundReceive(Actor.scala:537)\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:471)\n\tat edu.rice.habanero.actors.AkkaActor.aroundReceive(AkkaActor.scala:17)\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:579)\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:547)\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\nUncaught error from thread [UCT-akka.actor.default-dispatcher-10]: Java heap space, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCTUncaught error from thread [UCT-akka.actor.default-dispatcher-14]: Java heap space, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[UCT]\njava.lang.OutOfMemoryError: Java heap space\n\tat scala.collection.immutable.RedBlackTree$Tree.withRight(RedBlackTree.scala:690)\n\tat scala.collection.immutable.RedBlackTree$.balanceRight(RedBlackTree.scala:397)\n\tat scala.collection.immutable.RedBlackTree$.upd(RedBlackTree.scala:419)\n\tat scala.collection.immutable.RedBlackTree$.upd(RedBlackTree.scala:419)\n\tat scala.collection.immutable.RedBlackTree$.upd(RedBlackTree.scala:417)\n\tat scala.collection.immutable.RedBlackTree$.upd(RedBlackTree.scala:419)\n\tat scala.collection.immutable.RedBlackTree$.upd(RedBlackTree.scala:419)\n\tat scala.collection.immutable.RedBlackTree$.upd(RedBlackTree.scala:417)\n\tat scala.collection.immutable.RedBlackTree$.update(RedBlackTree.scala:175)\n\tat scala.collection.immutable.TreeMap.updated(TreeMap.scala:139)\n\tat akka.actor.dungeon.ChildrenContainer$NormalChildrenContainer.add(ChildrenContainer.scala:113)\n\tat akka.actor.dungeon.Children.initChild(Children.scala:161)\n\tat akka.actor.dungeon.Children.initChild$(Children.scala:22)\n\tat akka.actor.ActorCell.initChild(ActorCell.scala:410)\n\tat akka.actor.dungeon.Children.makeChild(Children.scala:324)\n\tat akka.actor.dungeon.Children.attachChild(Children.scala:50)\n\tat akka.actor.dungeon.Children.attachChild$(Children.scala:22)\n\tat akka.actor.ActorCell.attachChild(ActorCell.scala:410)\n\tat akka.actor.ActorSystemImpl.actorOf(ActorSystem.scala:905)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor$.createNodeActor(UctAkkaActorBenchmark.scala:217)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.generateChildren(UctAkkaActorBenchmark.scala:291)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.process(UctAkkaActorBenchmark.scala:244)\n\tat edu.rice.habanero.actors.AkkaActor$$anon$1.applyOrElse(AkkaActor.scala:33)\n\tat akka.actor.Actor.aroundReceive(Actor.scala:537)\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:471)\n\tat edu.rice.habanero.actors.AkkaActor.aroundReceive(AkkaActor.scala:17)\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:579)\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:547)\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n]\njava.lang.OutOfMemoryError: Java heap space\n\tat scala.collection.immutable.TreeMap.newMapOrSelf(TreeMap.scala:83)\n\tat scala.collection.immutable.TreeMap.updated(TreeMap.scala:139)\n\tat akka.actor.dungeon.ChildrenContainer$NormalChildrenContainer.add(ChildrenContainer.scala:113)\n\tat akka.actor.dungeon.Children.initChild(Children.scala:161)\n\tat akka.actor.dungeon.Children.initChild$(Children.scala:22)\n\tat akka.actor.ActorCell.initChild(ActorCell.scala:410)\n\tat akka.actor.dungeon.Children.makeChild(Children.scala:324)\n\tat akka.actor.dungeon.Children.attachChild(Children.scala:50)\n\tat akka.actor.dungeon.Children.attachChild$(Children.scala:22)\n\tat akka.actor.ActorCell.attachChild(ActorCell.scala:410)\n\tat akka.actor.ActorSystemImpl.actorOf(ActorSystem.scala:905)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor$.createNodeActor(UctAkkaActorBenchmark.scala:217)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.generateChildren(UctAkkaActorBenchmark.scala:291)\n\tat edu.rice.habanero.benchmarks.uct.UctAkkaActorBenchmark$NodeActor.process(UctAkkaActorBenchmark.scala:244)\n\tat edu.rice.habanero.actors.AkkaActor$$anon$1.applyOrElse(AkkaActor.scala:33)\n\tat akka.actor.Actor.aroundReceive(Actor.scala:537)\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:471)\n\tat edu.rice.habanero.actors.AkkaActor.aroundReceive(AkkaActor.scala:17)\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:579)\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:547)\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\n",
    "avg_cpu_usage": 27.5,
    "avg_cpu_time": 47.1,
    "avg_io_time": 0.0,
    "p90_io": 0.0,
    "number_of_pauses": 0,
    "total_pause_time": 0,
    "avg_pause_time": 0,
    "pauses_per_category": {},
    "total_pause_time_per_category": {},
    "avg_pause_time_per_category": {},
    "p90_pause_time": 0,
    "throughput": 0
}