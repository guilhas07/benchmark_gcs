{
    "garbage_collector": "G1",
    "jdk": "GraalVM_21.0.4",
    "benchmark_group": "Renaissance",
    "benchmark_name": "dec-tree",
    "heap_size": "256",
    "error": "Error code not found: 1\n12:22:46.998 ERROR [main] org.apache.spark.SparkContext - Error initializing SparkContext.\norg.apache.spark.SparkIllegalArgumentException: [INVALID_DRIVER_MEMORY] System memory 268435456 must be at least 471859200. Please increase heap size using the --driver-memory option or \"spark.driver.memory\" in Spark configuration.\n\tat org.apache.spark.memory.UnifiedMemoryManager$.getMaxMemory(UnifiedMemoryManager.scala:219) ~[spark-core_2.13-3.5.0.jar:3.5.0]\n\tat org.apache.spark.memory.UnifiedMemoryManager$.apply(UnifiedMemoryManager.scala:201) ~[spark-core_2.13-3.5.0.jar:3.5.0]\n\tat org.apache.spark.SparkEnv$.create(SparkEnv.scala:325) ~[spark-core_2.13-3.5.0.jar:3.5.0]\n\tat org.apache.spark.SparkEnv$.createDriverEnv(SparkEnv.scala:196) ~[spark-core_2.13-3.5.0.jar:3.5.0]\n\tat org.apache.spark.SparkContext.createSparkEnv(SparkContext.scala:284) ~[spark-core_2.13-3.5.0.jar:3.5.0]\n\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:483) ~[spark-core_2.13-3.5.0.jar:3.5.0]\n\tat org.apache.spark.SparkContext$.getOrCreate(SparkContext.scala:2888) ~[spark-core_2.13-3.5.0.jar:3.5.0]\n\tat org.apache.spark.sql.SparkSession$Builder.$anonfun$getOrCreate$2(SparkSession.scala:1099) ~[spark-sql_2.13-3.5.0.jar:3.5.0]\n\tat scala.Option.getOrElse(Option.scala:201) ~[scala-library-2.13.12.jar:?]\n\tat org.apache.spark.sql.SparkSession$Builder.getOrCreate(SparkSession.scala:1093) ~[spark-sql_2.13-3.5.0.jar:3.5.0]\n\tat org.renaissance.apache.spark.SparkUtil.setUpSparkContext(SparkUtil.scala:81) ~[apache-spark_2.13-0.15.0.jar:0.15.0]\n\tat org.renaissance.apache.spark.SparkUtil.setUpSparkContext$(SparkUtil.scala:54) ~[apache-spark_2.13-0.15.0.jar:0.15.0]\n\tat org.renaissance.apache.spark.DecTree.setUpSparkContext(DecTree.scala:38) ~[apache-spark_2.13-0.15.0.jar:0.15.0]\n\tat org.renaissance.apache.spark.DecTree.setUpBeforeAll(DecTree.scala:89) ~[apache-spark_2.13-0.15.0.jar:0.15.0]\n\tat org.renaissance.harness.ExecutionDriver.executeBenchmark(ExecutionDriver.java:82) ~[renaissance-harness_3-0.15.0.jar:0.15.0]\n\tat org.renaissance.harness.RenaissanceSuite$.runBenchmarks$$anonfun$1(RenaissanceSuite.scala:172) ~[renaissance-harness_3-0.15.0.jar:0.15.0]\n\tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:15) [scala3-library_3-3.3.1.jar:3.3.1]\n\tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:10) [scala3-library_3-3.3.1.jar:3.3.1]\n\tat scala.collection.immutable.List.foreach(List.scala:333) [scala-library-2.13.12.jar:?]\n\tat org.renaissance.harness.RenaissanceSuite$.runBenchmarks(RenaissanceSuite.scala:205) [renaissance-harness_3-0.15.0.jar:0.15.0]\n\tat org.renaissance.harness.RenaissanceSuite$.main(RenaissanceSuite.scala:130) [renaissance-harness_3-0.15.0.jar:0.15.0]\n\tat org.renaissance.harness.RenaissanceSuite.main(RenaissanceSuite.scala) [renaissance-harness_3-0.15.0.jar:0.15.0]\n\tat jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]\n\tat org.renaissance.core.Launcher.loadAndInvokeHarnessClass(Launcher.java:129) [renaissance-gpl-0.15.0.jar:0.15.0]\n\tat org.renaissance.core.Launcher.launchHarnessClass(Launcher.java:78) [renaissance-gpl-0.15.0.jar:0.15.0]\n\tat org.renaissance.core.Launcher.main(Launcher.java:43) [renaissance-gpl-0.15.0.jar:0.15.0]\nBenchmark 'dec-tree' failed with exception:\norg.apache.spark.SparkIllegalArgumentException: [INVALID_DRIVER_MEMORY] System memory 268435456 must be at least 471859200. Please increase heap size using the --driver-memory option or \"spark.driver.memory\" in Spark configuration.\n\tat org.apache.spark.memory.UnifiedMemoryManager$.getMaxMemory(UnifiedMemoryManager.scala:219)\n\tat org.apache.spark.memory.UnifiedMemoryManager$.apply(UnifiedMemoryManager.scala:201)\n\tat org.apache.spark.SparkEnv$.create(SparkEnv.scala:325)\n\tat org.apache.spark.SparkEnv$.createDriverEnv(SparkEnv.scala:196)\n\tat org.apache.spark.SparkContext.createSparkEnv(SparkContext.scala:284)\n\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:483)\n\tat org.apache.spark.SparkContext$.getOrCreate(SparkContext.scala:2888)\n\tat org.apache.spark.sql.SparkSession$Builder.$anonfun$getOrCreate$2(SparkSession.scala:1099)\n\tat scala.Option.getOrElse(Option.scala:201)\n\tat org.apache.spark.sql.SparkSession$Builder.getOrCreate(SparkSession.scala:1093)\n\tat org.renaissance.apache.spark.SparkUtil.setUpSparkContext(SparkUtil.scala:81)\n\tat org.renaissance.apache.spark.SparkUtil.setUpSparkContext$(SparkUtil.scala:54)\n\tat org.renaissance.apache.spark.DecTree.setUpSparkContext(DecTree.scala:38)\n\tat org.renaissance.apache.spark.DecTree.setUpBeforeAll(DecTree.scala:89)\n\tat org.renaissance.harness.ExecutionDriver.executeBenchmark(ExecutionDriver.java:82)\n\tat org.renaissance.harness.RenaissanceSuite$.runBenchmarks$$anonfun$1(RenaissanceSuite.scala:172)\n\tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)\n\tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)\n\tat scala.collection.immutable.List.foreach(List.scala:333)\n\tat org.renaissance.harness.RenaissanceSuite$.runBenchmarks(RenaissanceSuite.scala:205)\n\tat org.renaissance.harness.RenaissanceSuite$.main(RenaissanceSuite.scala:130)\n\tat org.renaissance.harness.RenaissanceSuite.main(RenaissanceSuite.scala)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.renaissance.core.Launcher.loadAndInvokeHarnessClass(Launcher.java:129)\n\tat org.renaissance.core.Launcher.launchHarnessClass(Launcher.java:78)\n\tat org.renaissance.core.Launcher.main(Launcher.java:43)\n",
    "avg_cpu_usage": 21.9,
    "avg_cpu_time": 37.1,
    "avg_io_time": 0.0,
    "p90_io": 0.0,
    "number_of_pauses": 0,
    "total_pause_time": 0,
    "avg_pause_time": 0,
    "pauses_per_category": {},
    "total_pause_time_per_category": {},
    "avg_pause_time_per_category": {},
    "p90_pause_time": 0,
    "throughput": 0
}